// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load, sel = address[9..11], a = DMuxout0, b = DMuxout1, c = DMuxout2, d = DMuxout3, e = DMuxout4, f = DMuxout5, g = DMuxout6, h = DMuxout7);

    RAM512(in = in, load = DMuxout0, address = address[0..8], out = RAM512out0);
    RAM512(in = in, load = DMuxout1, address = address[0..8], out = RAM512out1);
    RAM512(in = in, load = DMuxout2, address = address[0..8], out = RAM512out2);
    RAM512(in = in, load = DMuxout3, address = address[0..8], out = RAM512out3);
    RAM512(in = in, load = DMuxout4, address = address[0..8], out = RAM512out4);
    RAM512(in = in, load = DMuxout5, address = address[0..8], out = RAM512out5);
    RAM512(in = in, load = DMuxout6, address = address[0..8], out = RAM512out6);
    RAM512(in = in, load = DMuxout7, address = address[0..8], out = RAM512out7);

    Mux8Way16(a = RAM512out0, b = RAM512out1, c = RAM512out2, d = RAM512out3, e = RAM512out4, f = RAM512out5, g = RAM512out6, h = RAM512out7, sel = address[9..11], out = out);

}